{"version":3,"file":"static/js/352.32dbb04d.chunk.js","mappings":"sMAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6G,qHCDRE,E,OAAYF,GAAAA,OAAH,sI,SCsCtB,EAlCkB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,kBAAMC,SAZiB,SAAAC,GACvBA,EAAEC,iBAEmB,KAAjBJ,EAAMK,QAIVP,EAASE,GACTC,EAAS,KAJPK,EAAAA,GAAAA,MAAY,oCAKf,EAGC,WACE,kBACEC,KAAK,OACLC,MAAOR,EACPS,SApBoB,SAAAN,GACxBF,EAASE,EAAEO,cAAcF,MAAMG,cAChC,KAoBG,SAACd,EAAD,CAAWU,KAAK,SAAhB,SAAyB,aAG9B,E,kBCHD,EA3BmB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,IAAD,CAAUC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMP,GAAtC,SACGI,KAFID,EADC,OAUnB,E,SC+BD,EA7Cc,WAAO,IAAD,EAClB,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeS,EAAf,KACA,GAA0BtB,EAAAA,EAAAA,UAAS,IAAnC,eAAOuB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WACJF,IACFN,EAAU,IACVE,EAAS,IACTO,EAAYH,GAEf,GAAE,CAACA,IAEJ,IAAMG,EAAc,SAAA9B,GAClB+B,EAAAA,GAAAA,eACkB/B,GACfgC,MAAK,SAAAC,GACAA,EAASC,QAAQC,QAAU,EAC7Bd,EAAUY,EAASC,SAGrBX,EAAS,2CAAD,OAA4CvB,EAA5C,MACT,IACAoC,OAAM,SAAAd,GAAK,OAAIC,EAASD,EAAMe,QAAnB,GACf,EAWD,OACE,4BACE,SAAC,EAAD,CAAWvC,SAPM,SAAAE,IAJK,SAAAA,GACxB0B,EAA0B,KAAV1B,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,CAGCsC,CAAkBtC,GAClB8B,EAAY9B,EACb,IAKIY,EAAOuB,QAAU,IAAK,SAAC,EAAD,CAAYvB,OAAQA,IAChC,KAAVU,IAAgB,wBAAKA,MAG3B,C,sBCxCM,IAkCDiB,EAAM,CACRC,sBA5CJ,WAGC,OAAOC,MACJ,0GAHc,CAAEC,OAAQ,MAAOC,QAAS,CAAEC,OAAQ,sBAKlDZ,MAAK,SAAAC,GAAQ,OAAIA,EAASY,MAAb,GAChB,EAsCGC,eApC0B,SAAC9C,GAG3B,OAAOyC,MAAM,mDAAD,OACyCzC,EADzC,4DAFI,CAAE0C,OAAQ,MAAOC,QAAS,CAAEC,OAAQ,sBAMjDZ,MAAK,SAAAC,GAAQ,OAAIA,EAASY,MAAb,GACnB,EA6BGE,SA3BoB,SAAC,GAAU,IAAT/B,EAAQ,EAARA,GAGtB,OAAOyB,MAAM,sCAAD,OAC4BzB,EAD5B,4DAFI,CAAE0B,OAAQ,MAAOC,QAAS,CAAEC,OAAQ,sBAMjDZ,MAAK,SAAAC,GAAQ,OAAIA,EAASY,MAAb,GACnB,EAoBGG,aAlBwB,SAAC,GAAU,IAAThC,EAAQ,EAARA,GAG1B,OAAOyB,MAAM,sCAAD,OAAuCzB,EAAvC,oEAFI,CAAC0B,OAAQ,MAAOC,QAAS,CAACC,OAAQ,sBAG/CZ,MAAK,SAAAC,GAAQ,OAAIA,EAASY,MAAb,GACnB,EAcGI,gBAZ2B,SAAC,GAAU,IAATjC,EAAQ,EAARA,GAG7B,OAAOyB,MAAM,sCAAD,OAAuCzB,EAAvC,oEAFI,CAAC0B,OAAQ,MAAOC,QAAS,CAACC,OAAQ,sBAG/CZ,MAAK,SAAAC,GAAQ,OAAIA,EAASY,MAAb,GACnB,GAUD,M","sources":["pages/Home.styled.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ListLink = styled(Link)`\ntext-decoration: none;\ncolor: #000;\n\n:hover,\n:focus {\n    color: DeepPink;\n  }\n`;","import styled from \"styled-components\";\n\nexport const BtnSearch = styled.button`\nborder-color: HotPink;\nborder-radius: 5px;\nbackground-color: HotPink;\n\n  :hover {\n    color: #fff;\n  }\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BtnSearch } from \"../SearchBox/SearchBox.styled\";\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Please, fill in the search field.');\n      return;\n    }\n    onSearch(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n      />\n      <BtnSearch type=\"submit\">Search</BtnSearch>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import { useLocation } from 'react-router-dom';\nimport { ListLink } from 'pages/Home.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ol>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <ListLink to={`${id}`} state={{ from: location }}>\n              {title}\n            </ListLink>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport movieAPI from '../services/movie-api';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const moviesName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (moviesName) {\n      setMovies([]);\n      setError('');\n      fetchMovies(moviesName);\n    }\n  }, [moviesName]);\n\n  const fetchMovies = query => {\n    movieAPI\n      .getSearchMovie(query)\n      .then(response => {\n        if (response.results.length >= 1) {\n          setMovies(response.results);\n          return;\n        }\n        setError(`Sorry, there is no movie with the name \"${query}\".`);\n      })\n      .catch(error => setError(error.message));\n  };\n\n  const updateQueryString = query => {\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  const handleSearch = query => {\n    updateQueryString(query);\n    fetchMovies(query);\n  };\n\n  return (\n    <div>\n      <SearchBox onSearch={handleSearch} />\n      {movies.length >= 1 && <MoviesList movies={movies} />}\n      {error !== '' && <h1>{error}</h1>}\n    </div>\n  );\n};\n\nexport default Movie;","function getFavoriteMoviesList()  {\n  const options = { method: 'GET', headers: { accept: 'application/json' } };\n\n return fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=971dc393aaedcd6f3861b1889a452151&language=en-US',\n    options\n  ).then(response => response.json());\n};\n\nexport const getSearchMovie = (query) => {\n    const options = { method: 'GET', headers: { accept: 'application/json' } };\n\n    return fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=971dc393aaedcd6f3861b1889a452151&language=en-US`,\n      options\n    )\n      .then(response => response.json());\n};\n\nexport const getMovie = ({id}) => {\n    const options = { method: 'GET', headers: { accept: 'application/json' } };\n\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=971dc393aaedcd6f3861b1889a452151&language=en-US`,\n      options\n    )\n      .then(response => response.json())\n};\n\nexport const getMovieCast = ({id}) => {\n    const options = {method: 'GET', headers: {accept: 'application/json'}};\n\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=971dc393aaedcd6f3861b1889a452151&language=en-US`, options)\n      .then(response => response.json())\n};\n\nexport const getMovieReviews = ({id}) => {\n    const options = {method: 'GET', headers: {accept: 'application/json'}};\n\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=971dc393aaedcd6f3861b1889a452151&language=en-US`, options)\n      .then(response => response.json())\n};\n\nconst api = {\n    getFavoriteMoviesList,\n    getSearchMovie,\n    getMovie,\n    getMovieCast,\n    getMovieReviews,\n}\n\nexport default api;"],"names":["ListLink","styled","Link","BtnSearch","onSearch","useState","query","setQuery","onSubmit","e","preventDefault","trim","toast","type","value","onChange","currentTarget","toLowerCase","movies","location","useLocation","map","id","title","to","state","from","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","moviesName","get","useEffect","fetchMovies","movieAPI","then","response","results","length","catch","message","updateQueryString","api","getFavoriteMoviesList","fetch","method","headers","accept","json","getSearchMovie","getMovie","getMovieCast","getMovieReviews"],"sourceRoot":""}